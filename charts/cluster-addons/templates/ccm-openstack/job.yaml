{{- if and .Values.ccm.enabled (eq .Values.ccm.type "openstack") }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "cluster-addons.componentName" (list . "ccm-openstack") }}-{{ .Release.Revision }}
  labels: {{ include "cluster-addons.componentLabels" (list . "ccm-openstack") | nindent 4 }}
spec:
  # Keep trying for a decent amount of time before failing
  backoffLimit: 1000
  # Keep succeeded jobs for 5m after finishing
  ttlSecondsAfterFinished: 300
  template:
    metadata:
      labels: {{ include "cluster-addons.componentSelectorLabels" (list . "ccm-openstack") | nindent 8 }}
    spec:
      # Ensure that we run as a non-root user
      securityContext:
        runAsUser: 1001
      serviceAccountName: {{ include "cluster-addons.componentName" (list . "deployer") }}
      restartPolicy: OnFailure
      containers:
        - name: ccm-openstack
          image: {{ printf "%s:%s" .Values.jobImage.repository (default .Chart.AppVersion .Values.jobImage.tag) }}
          imagePullPolicy: {{ .Values.jobImage.pullPolicy }}
          args:
            - /bin/sh
            - -c
            - |
                set -ex
                kubectl apply -k /kustomize
                kubectl -n kube-system rollout status daemonset/openstack-cloud-controller-manager
          volumeMounts:
            - name: kustomize
              mountPath: /kustomize
              readOnly: true
      # This job must be able to run on uninitialised nodes
      tolerations: {{ .Values.bootstrapTolerations | toYaml | nindent 8 }}
      # This job runs before the DNS provider is available, so cannot use the cluster DNS nameserver
      dnsPolicy: None
      dnsConfig:
        nameservers: {{ .Values.bootstrapDNSNameservers | toYaml | nindent 10 }}
      volumes:
        - name: kustomize
          secret:
            secretName: {{ include "cluster-addons.componentName" (list . "ccm-openstack-kustomize") }}
{{- end }}
