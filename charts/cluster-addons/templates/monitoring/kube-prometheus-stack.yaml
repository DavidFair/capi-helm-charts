{{- if .Values.monitoring.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "cluster-addons.componentName" (list . "kube-prometheus-stack") }}-config
  labels:
    {{- include "cluster-addons.componentLabels" (list . "kube-prometheus-stack") | nindent 4 }}
    addons.stackhpc.com/watch: ""
stringData:
  defaults: |
    alertmanager:
      alertmanagerSpec:
        image:
          registry: {{ include "cluster-addons.imagePrefix" . }}quay.io
    prometheusOperator:
      admissionWebhooks:
        patch:
          image:
            registry: {{ include "cluster-addons.imagePrefix" . }}registry.k8s.io
      image:
        registry: {{ include "cluster-addons.imagePrefix" . }}quay.io
      prometheusConfigReloader:
        image:
          registry: {{ include "cluster-addons.imagePrefix" . }}quay.io
      thanosImage:
        registry: {{ include "cluster-addons.imagePrefix" . }}quay.io
    prometheus:
      prometheusSpec:
        image:
          registry: {{ include "cluster-addons.imagePrefix" . }}quay.io
    thanosRuler:
      thanosRulerSpec:
        image:
          registry: {{ include "cluster-addons.imagePrefix" . }}quay.io
    kube-state-metrics:
      image:
        repository: {{ include "cluster-addons.imagePrefix" . }}registry.k8s.io/kube-state-metrics/kube-state-metrics
    prometheus-node-exporter:
      image:
        repository: {{ include "cluster-addons.imagePrefix" . }}quay.io/prometheus/node-exporter
    grafana:
      image:
        repository: {{ include "cluster-addons.imagePrefix" . }}docker.io/grafana/grafana
      sidecar:
        image:
          repository: {{ include "cluster-addons.imagePrefix" . }}quay.io/kiwigrid/k8s-sidecar
      downloadDashboardsImage:
        repository: {{ include "cluster-addons.imagePrefix" . }}docker.io/curlimages/curl
      initChownData:
        image:
          repository: {{ include "cluster-addons.imagePrefix" . }}docker.io/busybox
      imageRenderer:
        image:
          repository: {{ include "cluster-addons.imagePrefix" . }}docker.io/grafana/grafana-image-renderer
    prometheus:
      prometheusSpec:
        storageSpec:
          volumeClaimTemplate:
            spec:
              # Omit storageClassName field to use default storage class
              # storageClassName: 
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: {{ .Values.monitoring.prometheusVolumeCapacity }}
  overrides: |
    {{- toYaml .Values.monitoring.kubePrometheusStack.release.values | nindent 4 }}
---
apiVersion: addons.stackhpc.com/v1alpha1
kind: HelmRelease
metadata:
  name: {{ include "cluster-addons.componentName" (list . "kube-prometheus-stack") }}
  labels: {{ include "cluster-addons.componentLabels" (list . "kube-prometheus-stack") | nindent 4 }}
  annotations:
    # Tell Argo to ignore the non-controller owner references for this object
    argocd.argoproj.io/sync-options: "ControllerReferencesOnly=true"
spec:
  clusterName: {{ include "cluster-addons.clusterName" . }}
  bootstrap: true
  chart: {{ toYaml .Values.monitoring.kubePrometheusStack.chart | nindent 4 }}
  targetNamespace: {{ .Values.monitoring.kubePrometheusStack.release.namespace }}
  releaseName: kube-prometheus-stack
  valuesSources:
    - secret:
        name: {{ include "cluster-addons.componentName" (list . "kube-prometheus-stack") }}-config
        key: defaults
    - secret:
        name: {{ include "cluster-addons.componentName" (list . "kube-prometheus-stack") }}-config
        key: overrides
---
apiVersion: addons.stackhpc.com/v1alpha1
kind: Manifests
metadata:
  name: {{ include "cluster-addons.componentName" (list . "kube-prometheus-stack-dashboards") }}
  labels: {{ include "cluster-addons.componentLabels" (list . "kube-prometheus-stack-dashboards") | nindent 4 }}
  annotations:
    # Tell Argo to ignore the non-controller owner references for this object
    argocd.argoproj.io/sync-options: "ControllerReferencesOnly=true"
spec:
  clusterName: {{ include "cluster-addons.clusterName" . }}
  bootstrap: true
  targetNamespace: {{ .Values.monitoring.kubePrometheusStack.release.namespace }}
  releaseName: kube-prometheus-stack-dashboards
  manifestSources:
    - template: |
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: nvidia-dcgm-exporter-dashboard
          labels:
            grafana_dashboard: "1"
        data:
          nvidia-dcgm-exporter-dashboard.json: |
            {{- .Files.Get "grafana-dashboards/nvidia-dcgm-exporter-dashboard_rev2.json" | nindent 12 }}
---
apiVersion: addons.stackhpc.com/v1alpha1
kind: Manifests
metadata:
  name: {{ include "cluster-addons.componentName" (list . "kube-prometheus-stack-dashboards") }}
  labels: {{ include "cluster-addons.componentLabels" (list . "kube-prometheus-stack-dashboards") | nindent 4 }}
spec:
  clusterName: {{ include "cluster-addons.clusterName" . }}
  bootstrap: true
  targetNamespace: {{ .Values.monitoring.kubePrometheusStack.release.namespace }}
  releaseName: kube-prometheus-stack-dashboards
  manifestSources:
    - template: |
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: nginx-ingress-dashboard
          labels:
            grafana_dashboard: "1"
        data:
          nginx-ingress-dashboard.json: |
            {{- .Files.Get "grafana-dashboards/nginx-ingress-dashboard.json" | nindent 12 }}
{{- end }}
