{{- if and .Values.cni.enabled (eq .Values.cni.type "weave") }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "cluster-addons.componentName" (list . "cni-weave") }}-{{ .Release.Revision }}
  labels: {{ include "cluster-addons.componentLabels" (list . "cni-weave") | nindent 4 }}
spec:
  # Keep trying for a decent amount of time before failing
  backoffLimit: 1000
  # Keep succeeded jobs for 5m after finishing
  ttlSecondsAfterFinished: 300
  template:
    metadata:
      labels: {{ include "cluster-addons.componentSelectorLabels" (list . "cni-weave") | nindent 8 }}
    spec:
      serviceAccountName: {{ include "cluster-addons.componentName" (list . "deployer") }}
      restartPolicy: OnFailure
      containers:
        - name: cni-weave
          image: {{ printf "%s:%s" .Values.jobImage.repository (default .Chart.AppVersion .Values.jobImage.tag) }}
          imagePullPolicy: {{ .Values.jobImage.pullPolicy }}
          args:
            - /bin/sh
            - -c
            - |
                set -exo pipefail
                kubernetes_vn="$(kubectl version | base64 | tr -d '\n')"
                kubectl apply -f "{{ tpl .Values.cni.weave.manifestURL . }}?k8s-version=$kubernetes_vn"
                kubectl -n kube-system rollout status daemonset/weave-net
      # This installs a primary CNI, so must be able to run on unready/uninitialised nodes
      tolerations: {{ .Values.bootstrapTolerations | toYaml | nindent 8 }}
      # Because it provides the container networking, it must use host networking
      hostNetwork: true
{{- end }}
