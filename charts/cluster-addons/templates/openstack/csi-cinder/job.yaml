{{- if and (not .Values.bootstrapOnly) .Values.openstack.enabled .Values.openstack.csiCinder.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "cluster-addons.componentName" (list . "csi-cinder") }}-{{ .Release.Revision }}
  labels: {{ include "cluster-addons.componentLabels" (list . "csi-cinder") | nindent 4 }}
spec:
  # Keep trying for a decent amount of time before failing
  backoffLimit: 1000
  # Keep succeeded jobs for 5m after finishing
  ttlSecondsAfterFinished: 300
  template:
    metadata:
      labels: {{ include "cluster-addons.componentSelectorLabels" (list . "csi-cinder") | nindent 8 }}
    spec:
      # Ensure that we run as a non-root user
      securityContext:
        runAsUser: 1001
      serviceAccountName: {{ include "cluster-addons.componentName" (list . "deployer") }}
      restartPolicy: OnFailure
      containers:
        - name: csi-cinder
          image: {{ printf "%s:%s" .Values.jobImage.repository (default .Chart.AppVersion .Values.jobImage.tag) }}
          imagePullPolicy: {{ .Values.jobImage.pullPolicy }}
          args:
            - /bin/sh
            - -c
            - |
                set -exo pipefail
                kustomize build /kustomize | kubectl apply -f -
                kubectl -n kube-system rollout status statefulset/csi-cinder-controllerplugin
                kubectl -n kube-system rollout status daemonset/csi-cinder-nodeplugin
          volumeMounts:
            - name: kustomize
              mountPath: /kustomize
              readOnly: true
      volumes:
        - name: kustomize
          secret:
            secretName: {{ include "cluster-addons.componentName" (list . "csi-cinder-kustomize") }}
{{- end }}
