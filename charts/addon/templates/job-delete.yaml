
apiVersion: batch/v1
kind: Job
metadata:
  # Produce a new job for each release
  name: {{ include "addon.fullname" . }}-delete
  labels: {{ include "addon.jobLabels" (list . "delete") | nindent 4 }}
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels: {{ include "addon.jobSelectorLabels" (list . "delete") | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets: {{ toYaml . | nindent 8 }}
      {{- end }}
      securityContext: {{ toYaml .Values.podSecurityContext | nindent 8 }}
      restartPolicy: OnFailure
      # The delete hook pod always uses the service account
      serviceAccountName: {{ tpl .Values.serviceAccount.name . }}
      # Use an init container to suspend any existing install jobs for the release
      # The init container does not include the kubeconfig, even if defined, as it
      # only needs to target install jobs on the same cluster as this job
      # This functionality only exists from 1.21 (alpha opt-in, beta from 1.22)
      # If it is not present, we have no option but to gamble
      {{- if semverCompare ">=1.21" .Capabilities.KubeVersion.Version }}
      initContainers:
        - name: suspend
          image: {{ include "addon.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext: {{ toYaml .Values.securityContext | nindent 12 }}
          args:
            - /bin/bash
            - -c
            - |
                set -exo pipefail
                {{- $labels := include "addon.jobSelectorLabels" (list . "install") | fromYaml }}
                LABELS='{{ range $i, $label := keys $labels }}{{ if $i }},{{ end }}{{ $label }}={{ index $labels $label }}{{ end }}'
                for job in $(kubectl get job -n {{ .Release.Namespace }} -l "$LABELS" -o name); do
                    kubectl patch $job -n {{ .Release.Namespace }} -p '{"spec":{"suspend":true}}'
                done
          resources: {{ toYaml .Values.resources | nindent 12 }}
      {{- end }}
      containers:
        - name: delete
          image: {{ include "addon.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext: {{ toYaml .Values.securityContext | nindent 12 }}
          args:
            - /bin/bash
            - -c
            - |
                set -exo pipefail
                if [ -f ./hook-predelete.sh ]; then
                    source ./hook-predelete.sh
                fi
                source ./delete.sh
                if [ -f ./hook-postdelete.sh ]; then
                    source ./hook-postdelete.sh
                fi
          {{- if .Values.kubeconfigSecret.name }}
          # The delete container itself uses the kubeconfig if given, so that it
          # targets the remote cluster
          env:
            - name: KUBECONFIG
              value: /config/auth/kubeconfig
          {{- end }}
          # Set the working directory to the directory containing the install config
          workingDir: /config/install
          resources: {{ toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: install-config
              mountPath: /config/install
              readOnly: true
            {{- if .Values.kubeconfigSecret.name }}
            - name: kubeconfig
              mountPath: /config/auth
              readOnly: true
            {{- end }}
      hostNetwork: {{ .Values.hostNetwork }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: install-config
          secret:
            secretName: {{ include "addon.fullname" . }}-config
        {{- if .Values.kubeconfigSecret.name }}
        - name: kubeconfig
          secret:
            secretName: {{ tpl .Values.kubeconfigSecret.name . }}
            items:
              - key: {{ .Values.kubeconfigSecret.key }}
                path: kubeconfig
        {{- end }}
