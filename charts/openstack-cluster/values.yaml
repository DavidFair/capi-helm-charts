# Content for the clouds.yaml file
# Having this as a top-level item allows a clouds.yaml file from OpenStack to be used as a values file
clouds:
# The name of the cloud to use from the specified clouds
cloudName: openstack
# The PEM-encoded CA certificate for the specified cloud
cloudCACert:

# The image to use for cluster machines
machineImage:

# The name of the SSH key to inject into cluster machines
machineSSHKeyName:

# The Kubernetes version to deploy
# This should match the version of kubelet in the image
kubernetesVersion:

# Values for the Kubernetes cluster network
kubeNetwork:
  # By default, use the private network range 172.16.0.0/12 for the cluster network
  # We split it into two equally-sized blocks for pods and services
  # This gives ~500,000 addresses in each block
  pods:
    cidrBlocks:
      - 172.16.0.0/13
  services:
    cidrBlocks:
      - 172.24.0.0/13
  serviceDomain: cluster.local

# Settings for the OpenStack networking for the cluster
networking:
  # The nameservers to use for the hosts
  # By default, use Google's public DNS servers
  dnsNameservers: [8.8.8.8, 8.8.4.4]
  # Indicates if security groups should be managed by the cluster
  manageSecurityGroups: true
  # The ID of the external network to use
  # If not given, the external network will be detected
  externalNetworkId:
  # Details of the internal network to use
  internalNetwork:
    # Filter to find an existing network for the cluster internal network
    # See Cluster API documentation for details
    networkFilter:
      # id: e63ca1a0-f69d-4fbf-b306-310857b1afe5
      # name: tenant-internal-net
    # Filter to find an existing subnet for the cluster internal network
    # See Cluster API documentation for details
    subnetFilter:
    # The CIDR to use if creating a cluster network
    # This is only used if neither of networkFilter and subnetFilter are given
    nodeCidr: 192.168.3.0/24

# Settings for the Kubernetes API server
apiServer:
  # Indicates whether to deploy a load balancer for the API server
  enableLoadBalancer: true
  # Indicates whether to associate a floating IP with the API server
  associateFloatingIP: true
  # The fixed floating IP to associate with the API server
  # If not given, a new IP will be allocated if required
  floatingIP:

# Settings for the control plane
controlPlane:
  # The number of control plane machines to deploy
  # For high-availability, this should be greater than 1
  # For etcd quorum, it should be odd - usually 3, or 5 for very large clusters
  machineCount: 3
  # The flavor to use for control plane machines
  machineFlavor:
  # The kubeadm config specification for the control plane
  # By default, this uses a simple configuration that enables the external cloud provider
  kubeadmConfigSpec:
    initConfiguration:
      nodeRegistration:
        name: '{{ local_hostname }}'
        kubeletExtraArgs:
          cloud-provider: external
    clusterConfiguration:
      apiServer:
        extraArgs:
          cloud-provider: external
      controllerManager:
        extraArgs:
          cloud-provider: external
    joinConfiguration:
      nodeRegistration:
        name: '{{ local_hostname }}'
        kubeletExtraArgs:
          cloud-provider: external

# Defaults for node groups
# Each of these can be overridden in the specification for an individual node group
nodeGroupDefaults:
  # The failure domain for the node group
  failureDomain: nova
  # The flavor to use for machines in the node group
  machineFlavor:
  # The default kubeadm config specification for worker nodes
  # This will be merged with any configuration given for specific node groups
  # By default, this uses a simple configuration that enables the external cloud provider
  kubeadmConfigSpec:
    joinConfiguration:
      nodeRegistration:
        name: '{{ local_hostname }}'
        kubeletExtraArgs:
          cloud-provider: external

# The worker node groups for the cluster
nodeGroups:
  - # The name of the node group
    name: md-0
    # The number of machines in the node group
    machineCount: 3

# Configuration for cluster addons
addons:
  # Indicates if cluster addons should be deployed
  enabled: true
  # The image to use for the job that deploys the addons
  jobImage:
    repository: ghcr.io/stackhpc/k8s-utils
    tag: # defaults to chart appVersion
    pullPolicy: IfNotPresent
  # The chart to use for deploying addons
  chart:
    repo: https://stackhpc.github.io/capi-helm-charts
    name: cluster-addons
    version: # This defaults to the version that matches this chart
  # Release details for the addons deployment
  release:
    namespace: capi-system
    name: cluster-addons
    timeout: 30m
  # Values for the addons
  # See https://github.com/stackhpc/capi-helm-charts/blob/main/charts/cluster-addons for details
  # The clouds.yaml used for cluster deployment will be given in addition to these
  values:
    # By default, enable the OpenStack CCM
    ccm:
      enabled: true
      type: openstack
