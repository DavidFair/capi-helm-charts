name: Test OpenStack cluster chart
on:
  workflow_call:
    inputs:
      images:
        type: string
        description: JSON-encoded dictionary of images and versions
        required: true
      tests-full:
        type: boolean
        description: Indicates whether to run the full test suite or just a smoke test
        required: true
        default: false

jobs:
  test-chart:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up test environment
        uses: ./.github/actions/setup
        with:
          os-clouds: ${{ secrets.CLOUD }}
          project-id: ${{ secrets.PROJECT_ID }}
          docker-hub-mirror-url: ${{ secrets.DOCKER_HUB_MIRROR_URL }}
          control-plane-flavor: ${{ secrets.CONTROL_PLANE_FLAVOR }}
          node-group-flavor: ${{ secrets.NODE_GROUP_FLAVOR }}

      #####
      # For the smoke test, we do a clean deploymentÂ of the latest supported version
      #####

      - name: Test clean Kubernetes 1.28 deployment
        uses: ./.github/actions/upgrade-and-test
        with:
          name: ci-${{ github.run_id }}-kube-latest
          kubernetes-version: ${{ fromJson(inputs.images).kube-1-28-version }}
          image-id: ${{ fromJson(inputs.images).kube-1-28-image }}
          sonobuoy-upload: "yes"
        if: ${{ !inputs.tests-full }}

      - name: Delete Kubernetes 1.28 deployment
        run: helm delete ci-${{ github.run_id }}-kube-latest --wait
        if: ${{ !inputs.tests-full && always() }}

      #####
      # On a full test, first test that we can upgrade from a cluster deployed using the latest tag
      #####

      - name: Get latest tag
        id: latest-tag
        run: |
          set -eo pipefail
          TAG_NAME="$(curl -fsSL "$GITHUB_API_URL/repos/$GITHUB_REPOSITORY/releases/latest" | jq -r '.tag_name')"
          echo "tag-name=${TAG_NAME}" >> "$GITHUB_OUTPUT"
        if: ${{ inputs.tests-full }}

      - name: Deploy Kubernetes 1.28 with latest tag for chart upgrade test
        uses: ./.github/actions/upgrade-and-test
        with:
          name: ci-${{ github.run_id }}-chart-upgrade
          kubernetes-version: ${{ fromJson(inputs.images).kube-1-28-version }}
          image-id: ${{ fromJson(inputs.images).kube-1-28-image }}
          chart-version: ${{ steps.latest-tag.outputs.tag-name }}
        if: ${{ inputs.tests-full }}

      - name: Upgrade to current chart
        uses: ./.github/actions/upgrade-and-test
        with:
          name: ci-${{ github.run_id }}-chart-upgrade
          kubernetes-version: ${{ fromJson(inputs.images).kube-1-28-version }}
          image-id: ${{ fromJson(inputs.images).kube-1-28-image }}
        if: ${{ inputs.tests-full }}

      - name: Delete chart upgrade deployment
        run: helm delete ci-${{ github.run_id }}-chart-upgrade --wait
        if: ${{ inputs.tests-full && always() }}

      #####
      # On a full test, next run a full upgrade test
      # This will run a sonobuoy smoke test after every step with a full test at the end
      #####

      - name: Deploy Kubernetes 1.26 for Kubernetes upgrade test
        uses: ./.github/actions/upgrade-and-test
        with:
          name: ci-${{ github.run_id }}-kube-upgrade
          kubernetes-version: ${{ fromJson(inputs.images).kube-1-26-version }}
          image-id: ${{ fromJson(inputs.images).kube-1-26-image }}
        if: ${{ inputs.tests-full }}

      - name: Upgrade to Kubernetes 1.27
        uses: ./.github/actions/upgrade-and-test
        with:
          name: ci-${{ github.run_id }}-kube-upgrade
          kubernetes-version: ${{ fromJson(inputs.images).kube-1-27-version }}
          image-id: ${{ fromJson(inputs.images).kube-1-27-image }}
        if: ${{ inputs.tests-full }}

      - name: Upgrade to Kubernetes 1.28
        uses: ./.github/actions/upgrade-and-test
        with:
          name: ci-${{ github.run_id }}-kube-upgrade
          kubernetes-version: ${{ fromJson(inputs.images).kube-1-28-version }}
          image-id: ${{ fromJson(inputs.images).kube-1-28-image }}
          sonobuoy-mode: certified-conformance
          sonobuoy-upload: "yes"
        if: ${{ inputs.tests-full }}

      - name: Delete Kubernetes upgrade deployment
        run: helm delete ci-${{ github.run_id }}-kube-upgrade --wait
        if: ${{ inputs.tests-full && always() }}

      - name: Output controller logs
        if: ${{ always() }}
        run: |
          kubectl -n capi-system logs deploy/capi-controller-manager > capi-logs.txt
          kubectl -n capi-kubeadm-control-plane-system logs deploy/capi-kubeadm-control-plane-controller-manager > capi-kubeadm-control-plane-logs.txt
          kubectl -n capi-kubeadm-bootstrap-system logs deploy/capi-kubeadm-bootstrap-controller-manager > capi-kubeadm-bootstrap-logs.txt
          kubectl -n capo-system logs deploy/capo-controller-manager > capo-logs.txt
          kubectl -n capi-addon-system logs deploy/cluster-api-addon-provider > capi-addon-provider-logs.txt

      - name: Upload controller log artifacts
        uses: actions/upload-artifact@v3
        if: ${{ always() }} 
        with:
          name: cluster-api-controller-logs
          path: ./*-logs.txt
